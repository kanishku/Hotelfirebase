{"version":3,"file":"static/js/202.ec7ea710.chunk.js","mappings":"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","sources":["components/Details.tsx","components/Edit.tsx","components/Information.tsx","lib/firebase.ts","lib/controller.ts"],"sourcesContent":["import { doc, getDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore } from \"../lib/controller\";\nimport Information from \"./Information\";\n\nfunction Details() {\n  const { id } = useParams();\n\n  // Fetch a single document\n  const getHotel = doc(firestore, `hotels/${id}`);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [hotel, setHotel] = useState({});\n\n  useEffect(() => {\n    const fetchHotelData = async () => {\n      setIsLoading(true);\n      const docSnap = await getDoc(getHotel);\n      if (docSnap.exists()) {\n        const newHotelObj = {\n          id: docSnap.id,\n          ...docSnap.data(),\n        };\n        setHotel(newHotelObj);\n        setIsLoading(false);\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document\");\n      }\n    };\n    fetchHotelData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) return <div className=\"loading\" />;\n  return (\n    <div className=\"hotel-details\">\n      {Object.keys(hotel) && Object.keys(hotel).length ? (\n        <Information hotel={hotel} detailsPage />\n      ) : null}\n    </div>\n  );\n}\n\nexport default Details;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { updateHotel } from \"../lib/controller\";\n\ninterface IProps {\n  editDescription: boolean;\n  setEditDescription: React.Dispatch<React.SetStateAction<boolean>>;\n  id?: string;\n}\n\nfunction Edit({ editDescription, setEditDescription, id }: IProps) {\n  const [newDescription, setNewDescription] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const handleUpdate = () => {\n    // update hotel\n    updateHotel(id, { description: newDescription });\n    setEditDescription(!editDescription);\n    // navigate back to homepage\n    navigate(\"/\");\n  };\n\n  return (\n    <div className=\"edit\">\n      <label>Please enter the new hotel description below:</label>\n      <textarea\n        required\n        name=\"description\"\n        id=\"description\"\n        value={newDescription}\n        onChange={(e) => setNewDescription(e.target.value)}\n      />\n      <button className=\"update-button\" onClick={() => handleUpdate()}>\n        Update Hotel\n      </button>\n    </div>\n  );\n}\n\nexport default Edit;\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { deleteHotel } from \"../lib/controller\";\nimport { NewHotelType } from \"../types/hotel\";\nimport Edit from \"./Edit\";\n\ninterface IProps {\n  hotel: NewHotelType;\n  detailsPage?: boolean;\n}\n\nfunction Information({ hotel, detailsPage }: IProps) {\n  const [editDescription, setEditDescription] = useState(false);\n\n  const navigate = useNavigate();\n\n  return (\n    <div className=\"hotel-preview\">\n      <div className=\"image-container\">\n        <img className=\"location-image\" src={hotel.location} alt=\"Hotel\" />\n        <div className=\"highlights\">\n          <div className=\"highlights-text\">\n            <h2>{hotel.title}</h2>\n            <p className=\"region\">{hotel.region}</p>\n          </div>\n          <div className=\"highlights-price\">\n            <h2 className=\"per-night\">Â£{hotel.perNight}</h2>\n            <p>per night</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Description */}\n      <div className=\"description\">\n        <span className=\"reviews\">\n          <strong className=\"review-number\">{hotel.stars} stars</strong> (based\n          on {hotel.review} reviews)\n        </span>\n        <hr />\n        <span className=\"feature\">Main Feature: {hotel?.feature}</span>\n        {detailsPage ? (\n          <>\n            <p className=\"description-text\">\n              {hotel.description}{\" \"}\n              <strong\n                className=\"edit-text\"\n                onClick={() => setEditDescription(!editDescription)}\n              >\n                Edit Description\n              </strong>\n              {editDescription ? (\n                <Edit\n                  editDescription={editDescription}\n                  setEditDescription={setEditDescription}\n                  id={hotel.id}\n                />\n              ) : null}\n            </p>\n            <button onClick={() => deleteHotel(hotel.id, navigate)}>\n              Delete Hotel\n            </button>\n          </>\n        ) : (\n          <Link to={`/hotels/${hotel.id}`}>\n            <button className=\"moreinfo-btn\">View More Information</button>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Information;\n","import { initializeApp } from \"firebase/app\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBQqWEPEyTND3gsdb9jidAyfAx_X6TwZFQ\",\n  authDomain: \"hotel-dashboard-7382a.firebaseapp.com\",\n  projectId: \"hotel-dashboard-7382a\",\n  storageBucket: \"hotel-dashboard-7382a.appspot.com\",\n  messagingSenderId: \"932112069738\",\n  appId: \"1:932112069738:web:c7c290689f6c302c4fc613\",\n  measurementId: \"G-P7W6VR1NZH\",\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\n","import {\n  addDoc,\n  collection,\n  deleteDoc,\n  doc,\n  getFirestore,\n  setDoc,\n} from \"firebase/firestore\";\nimport { NavigateFunction } from \"react-router-dom\";\n// This is tree shaking from firestore\n\nimport { AddHotelType } from \"../types/hotel\";\nimport { app } from \"./firebase\";\n\nexport const firestore = getFirestore(app);\n\n// HOTELS COLLECTION\nexport const hotelsCollection = collection(firestore, \"hotels\");\n\n// ADD A NEW DOCUMENT TO YOUR COLLECTION\nexport const addHotel = async (hotelData: AddHotelType) => {\n  const newHotel = await addDoc(hotelsCollection, { ...hotelData });\n  console.log(`The new hotel was created at ${newHotel.path}`);\n};\n\n// DELETE A DOCUMENT IN YOUR COLLECTION\nexport const deleteHotel = async (\n  id: string | undefined,\n  navigate: NavigateFunction\n) => {\n  const document = doc(firestore, `hotels/${id}`);\n  await deleteDoc(document);\n  console.log(`The hotel has now been deleted`);\n  navigate(\"/\");\n};\n\n// EDIT A DOCUMENT / DESCRIPTION\nexport const updateHotel = async (id: string | undefined, docData: any) => {\n  const getHotel = doc(firestore, `hotels/${id}`);\n  await setDoc(getHotel, docData, { merge: true });\n  console.log(\"The value has been written to the database\");\n};\n"],"names":["id","useParams","getHotel","doc","firestore","useState","isLoading","setIsLoading","hotel","setHotel","useEffect","fetchHotelData","getDoc","docSnap","exists","newHotelObj","data","console","log","className","Object","keys","length","detailsPage","editDescription","setEditDescription","newDescription","setNewDescription","navigate","useNavigate","required","name","value","onChange","e","target","onClick","updateHotel","description","src","location","alt","title","region","perNight","stars","review","feature","deleteHotel","to","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","hotelsCollection","collection","addHotel","hotelData","addDoc","newHotel","path","document","deleteDoc","docData","setDoc","merge"],"sourceRoot":""}